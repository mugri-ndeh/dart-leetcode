//Friday October 8

/*Exercise 1:
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
*/
void multiplesofxorx(int num1, int num2) {
  var sum = 0;

  for (var i = 1; i <= 1000; i++) {
    if (i % num1 == 0 || i % num2 == 0) {
      sum = sum + i;
    }
  }
  print('Exercise 1 answer is: ' + sum.toString());
}

/*Excercise 2: 
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/
void fibbonaccisum(int limit) {
  var holder = 0;
  var sum = 0;
  var fibSeries = [];

  for (var i = 1; i < limit; i++) {
    if (i == 1 || i == 2) {
      fibSeries.add(i);
      holder = i;
    } else {
      holder = fibSeries[i - 2] + fibSeries[i - 3];
      fibSeries.add(holder);
    }

    //check if number is divisible by 2
    if (holder % 2 == 0 && holder < limit) {
      sum = sum + holder;
    }
    //check if number exceeds 4000000, then remove from list and break loop
    if (holder >= limit) {
      fibSeries.removeLast();
      break;
    }
  }

  print('Exercise 2 answer is: ' + sum.toString());
  //print(fibSeries);
}

void kthLargest(List<int> array, int k) {
  var arrayLength = array.length;
  var swap;
  for (var i = 0; i < array.length; i++) {
    for (var j = i + 1; j < arrayLength; j++) {
      if (array[i] > array[j]) {
        swap = array[i];
        array[i] = array[j];
        array[j] = swap;
      }
    }
  }
  //check position
  for (var i = 0; i <= arrayLength; i++) {
    if (i == arrayLength - k) {
      print('The ${k}th largest element is ${array[i]}');
      break;
    }
  }
}
